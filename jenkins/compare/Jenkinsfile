pipeline {
    agent { dockerfile {
          dir 'jenkins/compare'
        }
    }
    stages { 
	    stage('Prepare workspace') {
            steps {
			  sh label: 'remove an old dir (force in case does not exist)', script: 'rm -rf ss_example_files'
			  sh label: 'remove an old dir (force in case does not exist)', script: 'rm -rf run_R'
			  sh label: 'remove an old file (force in case does not exist)', script: 'rm -f models.zip'
			  sh label: 'remove an old file (force in case does not exist)', script: 'rm -f rename_ref_files.sh'
		   }
        }
	    stage('move shell script') {
		    steps{
			    sh label: 'copy over new version', script: 'cp jenkins/compare/rename_ref_files.sh rename_ref_files.sh'
				sh label: 'Make executable', script: 'chmod a+x rename_ref_files.sh'  
			}
		}
        stage('Copy models.zip artifact from previous stage') {
            steps {
			  sh label: 'create subfolder to save artifact', script: 'mkdir run_R'
              copyArtifacts filter: 'models.zip', fingerprintArtifacts: true, projectName: 'stock-synthesis-model', selector: lastCompleted()
              sh label: 'move models.zip', script: 'mv models.zip run_R/models.zip' 
			  sh label: 'Unzip models.zip', script: 'cd run_R && unzip models.zip'
			  sh label: 'confirm dir name', script: 'ls run_R'
		   }
        }
		stage('set up stock synthesis reference run files') {
		    steps {
				sh label: 'create subfolder to move repo files', script: 'mkdir ss_example_files'
				sh label: 'move the repo files', script: 'mv models ss_example_files'
				// sh label: 'view files', script: 'cd ss_example_files && ls -R .'
				sh label: 'rename files', script: './rename_ref_files.sh'
				// sh label: 'view renamed files', script: 'cd ss_example_files && ls -R .'
			}
		}
	    stage('Run comparison R script') {
		    steps{
			    sh label: 'Move comparison code', script: 'mv jenkins/compare/run_compare.R run_compare.R'
			    sh label: 'Run comparison R code', script: 'Rscript run_compare.R'
			}	
		}
		stage('Determine results of test') {
		    steps{
			    sh label: 'run R code', script: 'Rscript jenkins/shared/check_failed.R'
			}
		}
	}
    post {
	    always {
		    archiveArtifacts 'run_R/*.csv'
		}
        failure {
            mail bcc: '', body: 'Stock Synthesis build failed.', cc: '', from: '', replyTo: '', subject: 'Jenkins Build Failure: stock-synthesis-compare', to: 'kathryn.doering@noaa.gov ian.taylor@noaa.gov richard.methot@noaa.gov'
        }
		success {
            mail bcc: '', body: 'Stock Synthesis build passed.', cc: '', from: '', replyTo: '', subject: 'stock-synthesis-compare: Jenkins Build Passing!', to: 'kathryn.doering@noaa.gov ian.taylor@noaa.gov richard.methot@noaa.gov'
        }
    }
}